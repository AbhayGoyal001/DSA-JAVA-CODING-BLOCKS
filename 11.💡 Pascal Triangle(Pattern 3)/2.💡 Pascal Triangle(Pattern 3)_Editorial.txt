Pascal's triangle is the triangular array of the binomial coefficients.The number of entries in a given line is equal to the line number.Every entry in the line is the value of a binomial coefficient. The value of ith entry in the number line is C(line,i)(i.e apply mathematical combination formula ).
Where C(line,i)=line!/((line-i)!*i!).

Given pattern can be formed using 3 approches:
1.A simple method is to run two loops and calculate the value of binomial coefficient in inner loop. Complexity: O(N3).
2.O(N2) time and O(n2) space complexity.In this method store the previously generated values in 2-D array. Use these values to generate value in a line.
3.O(N2) time and O(1) space complexity. In this method calculate C(line,i) using C(line,i-1). It can be calculated in O(1) time as follows:

 C(line,i-1)=line!/((line-i+1)!*(i-1)!)
 C(line,i)=line!/((line-i)!*i!)
 C(line,i)=C(line,i-1)*(line-i+1)/i.
Code:

import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner scn=new Scanner(System.in);

        int n=scn.nextInt(),i,j;
       // work for each row
        for(i=1;i<=n;i++){

            int num=1;   // starting number

           // work for values
            for(j=1;j<=i;j++){

                if(j==1)
                    System.out.print(j+"\t");
                else
                {
                    num=num*(i-j+1)/(j-1);     // updating number
                    System.out.print(num+"\t");
                }
            }
            System.out.print("\n");
        }

       }
}
